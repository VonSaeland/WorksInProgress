//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjektMVCCV.ServiceReferenceItemCRUDCV {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/ProjektServiceCV")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribute {
            get {
                return this.AttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeField, value) != true)) {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceItemCRUDCV.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItemsList", ReplyAction="http://tempuri.org/IService1/GetItemsListResponse")]
        ProjektMVCCV.ServiceReferenceItemCRUDCV.Item[] GetItemsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItemsList", ReplyAction="http://tempuri.org/IService1/GetItemsListResponse")]
        System.Threading.Tasks.Task<ProjektMVCCV.ServiceReferenceItemCRUDCV.Item[]> GetItemsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItemById", ReplyAction="http://tempuri.org/IService1/GetItemByIdResponse")]
        ProjektMVCCV.ServiceReferenceItemCRUDCV.Item GetItemById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItemById", ReplyAction="http://tempuri.org/IService1/GetItemByIdResponse")]
        System.Threading.Tasks.Task<ProjektMVCCV.ServiceReferenceItemCRUDCV.Item> GetItemByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddItem", ReplyAction="http://tempuri.org/IService1/AddItemResponse")]
        void AddItem(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddItem", ReplyAction="http://tempuri.org/IService1/AddItemResponse")]
        System.Threading.Tasks.Task AddItemAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        void UpdateItem(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        System.Threading.Tasks.Task UpdateItemAsync(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteItem", ReplyAction="http://tempuri.org/IService1/DeleteItemResponse")]
        void DeleteItem(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteItem", ReplyAction="http://tempuri.org/IService1/DeleteItemResponse")]
        System.Threading.Tasks.Task DeleteItemAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ProjektMVCCV.ServiceReferenceItemCRUDCV.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ProjektMVCCV.ServiceReferenceItemCRUDCV.IService1>, ProjektMVCCV.ServiceReferenceItemCRUDCV.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProjektMVCCV.ServiceReferenceItemCRUDCV.Item[] GetItemsList() {
            return base.Channel.GetItemsList();
        }
        
        public System.Threading.Tasks.Task<ProjektMVCCV.ServiceReferenceItemCRUDCV.Item[]> GetItemsListAsync() {
            return base.Channel.GetItemsListAsync();
        }
        
        public ProjektMVCCV.ServiceReferenceItemCRUDCV.Item GetItemById(string id) {
            return base.Channel.GetItemById(id);
        }
        
        public System.Threading.Tasks.Task<ProjektMVCCV.ServiceReferenceItemCRUDCV.Item> GetItemByIdAsync(string id) {
            return base.Channel.GetItemByIdAsync(id);
        }
        
        public void AddItem(string name) {
            base.Channel.AddItem(name);
        }
        
        public System.Threading.Tasks.Task AddItemAsync(string name) {
            return base.Channel.AddItemAsync(name);
        }
        
        public void UpdateItem(string id, string name) {
            base.Channel.UpdateItem(id, name);
        }
        
        public System.Threading.Tasks.Task UpdateItemAsync(string id, string name) {
            return base.Channel.UpdateItemAsync(id, name);
        }
        
        public void DeleteItem(string id) {
            base.Channel.DeleteItem(id);
        }
        
        public System.Threading.Tasks.Task DeleteItemAsync(string id) {
            return base.Channel.DeleteItemAsync(id);
        }
    }
}
